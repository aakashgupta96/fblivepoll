<% link = post.get_file_url %>

<main>
  <section> 
    <canvas id='textCanvas' style=" display: none;"></canvas>
  
    <div class="note white-text">Just hit Refresh button in case your image does not load or any thing goes wrong.</div>
    <div class="row section">
      <div class="col l1 m1 s0" style="display: flex; flex-direction: column; justify-content: space-around;">
      </div>


      <div class="col l8 m8 s12" id="container"></div>


      <div class="col l2 m2 s12 relative" style="right: 20px;">
        <div class="row">
          <button id="showInstructions" class="btn-large blue darken-3 col s12">View Instructions</button>
        </div>
        
        <div class="row">
          <button id="toggleVideo" class="btn-large blue darken-3 col s12">Play Video</button>
        </div>
        
        <div class="row file-field input-field">
            <div class="col s12 btn-large blue darken-3">
              <span>Add Image</span>
              <input id="addImageFile" type="file">
            </div>
        </div>
              
        <%= form_tag(update_video_path(@post.id), class: "row", id: "data_form")  do %> 

          <input type="hidden" name="post_id" value="<%=@post.id%>">
          <input id="color" type="hidden" name="color" value="#fffff">   
          <input id="submit_frame" data-confirm ="Are you sure?" type="submit" value=<%= @post.status=="scheduled" ? "Schedule" : "Submit" %> class="btn col s12"> 

        <% end %>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/kineticjs/5.2.0/kinetic.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jscolor/2.0.4/jscolor.min.js"></script>
    <script>
     
      function update(activeAnchor) 
      {
        var group = activeAnchor.getParent();

        var topLeft = group.find('.topLeft')[0];
        var topRight = group.find('.topRight')[0];
        var bottomRight = group.find('.bottomRight')[0];
        var bottomLeft = group.find('.bottomLeft')[0];
        var image = group.find('.image')[0];

        var anchorX = activeAnchor.x();
        var anchorY = activeAnchor.y();

        // update anchor positions
        switch (activeAnchor.name()) {
          case 'topLeft':
            topRight.y(anchorY);
            bottomLeft.x(anchorX);
            break;
          case 'topRight':
            topLeft.y(anchorY);
            bottomRight.x(anchorX);
            break;
          case 'bottomRight':
            bottomLeft.y(anchorY);
            topRight.x(anchorX); 
            break;
          case 'bottomLeft':
            bottomRight.y(anchorY);
            topLeft.x(anchorX); 
            break;
        }

        image.setPosition(topLeft.getPosition());

        var width = topRight.x() - topLeft.x();
        var height = bottomLeft.y() - topLeft.y();
        if(width && height) 
        {
          image.setSize({width:width, height: height});
        }
      }


      var layer1;
      var stage;

      function addAnchor(group, x, y, name) 
      {
        
        var stage = group.getStage();
        var layer = group.getLayer();

        var anchor = new Kinetic.Circle({
          x: x,
          y: y,
          stroke: '#666',
          fill: '#ddd',
          strokeWidth: 2,
          radius: 0,
          name: name,
          draggable: true,
          dragOnTop: false,
        });
        

        anchor.on('dragmove', function(){
          update(this);
          this.getLayer().draw();
        });
        anchor.on('mousedown touchstart', function() {
          group.setDraggable(false);
          this.moveToTop();
        });
        anchor.on('dragend', function() {
          group.setDraggable(true);
          this.getLayer().draw();
        });
        // add hover styling
        anchor.on('mouseover', function() {
          var layer = this.getLayer();
          document.body.style.cursor = 'pointer';
          this.setStrokeWidth(4);
          this.getLayer().draw();
        });
        anchor.on('mouseout', function() {
          var layer = this.getLayer();
          document.body.style.cursor = 'default';
          this.strokeWidth(2);
          this.getLayer().draw();
        });

        group.add(anchor);
      }



      function addCloseButton(group, x, y,name) 
      {
        
        var stage = group.getStage();
        var layer = group.getLayer();

        var closeButton = new Kinetic.Circle({
          x: x,
          y: y,
          stroke: '#666',
          fill: 'red',
          strokeWidth: 2,
          radius: 0,
          name: name,
          dragOnTop: false,
        });

        var removeImage = function()
        {
          removeBorderEvents(this.parent);
          if(this.parent.attrs.name == "reaction")
          {
            var targets = [];
            var thisGroup = this.parent;
            var groups = thisGroup.parent.children;
            for(i=0;i<groups.length;i++)
            {
              if(groups[i].attrs.reaction == thisGroup.attrs.reaction)
              {
                targets.push(groups[i]);
              }
            }
            for(i=0;i<targets.length;i++)
            {
              targets[i].remove();
            }
          }
          else
          {
            this.parent.remove();
          }
          
          layer.draw();
        };
        closeButton.on('click',removeImage)
        group.add(closeButton);
      }




      function loadImages(sources, callback) 
      {
        var images = {};
        var loadedImages = 0;
        var numImages = 0;
        for(var src in sources) {
          numImages++;
        }
        for(var src in sources) {
          images[src] = new Image();
          images[src].onload = function() {
            if(++loadedImages >= numImages) {
              callback(images);
            }
          };
          images[src].src = sources[src];
        }
      }

      var prom;
      function initStage(images) 
      {
        var vid = 1;
        var vw = 720;
        var vh = 405;
        var vx = 0;
        var vy = 0;
        $('body').append('<div id="videoContainer" style="display: none;"></div>');
        var vidobj = '<video id="video' + vid + '" playsinline loop controls width="' + vw + '" height="' + vh + ' preload="auto" ><source src="' + '<%=link%>' + '" type="video/mp4"></source></video>';
        $('#videoContainer').html(vidobj);
        
        var stage = new Kinetic.Stage({
            container: 'container',
            width: 720,
            height: 405,
          });
        var video = $('#video' + vid).get(0);
        layer1 = new Kinetic.Layer();
        var img = new Kinetic.Image({
          name : 'video',
          x : vx, 
          y : vy, 
          width : vw, 
          height : vh, 
          image : video
        });
        layer1.add(img);
        stage.add(layer1);
        setVideo(img);

        function setVideo(i) {
          var v = $('#video' + vid + ' > video').get(0);
          i.setImage(v);
          stage.draw();
          setTimeout(setVideo,20,i);
        }
      }

      var sources = {
        background: "/backgrounds/default.jpg",
      };
      loadImages(sources, initStage);

    
      
      var addBorder = function()
      {
        this.find("Image")[0].attrs.stroke= "white",
        this.find("Image")[0].attrs.strokeWidth=2,
        temp = this.find("Circle");
        for(i=0;i<temp.length;i++)
        {
          temp[i].attrs.radius = 5;
        }
        this.getLayer().draw();
      };

      var removeBorder = function()
      {
        var images = this.find("Image")
        for(i=0;i<images.length;i++)
        {
          images[i].attrs.stroke = "";
          images[i].attrs.strokeWidth=0;
        }
        var circles = this.find("Circle");
        for(i=0;i<circles.length;i++)
        {
          circles[i].attrs.radius = 0;
        }
        this.getLayer().draw();
      };

      var addBorderEvents = function(group)
      {
          group.addEventListener('mouseover',addBorder);
          group.addEventListener('mouseout',removeBorder);
      };

      var removeBorderEvents = function(group)
      {
        if(group != undefined)
        {
          removeBorder.call(group);
          group.removeEventListener('mouseover',addBorder);
          group.removeEventListener('mouseout',removeBorder);
        }
      }

      var add_image = function(source,w,h)
      {
        var new_image = document.createElement("img")
        new_image.src = source;
        
        var imageGroup = new Kinetic.Group({
          x: 100,
          y: 100,
          draggable: true
        });

        var imageImg = new Kinetic.Image({
          x: 0,
          y: 0,
          image: new_image,
          width: w,
          height: h,
          name: 'image'
        });

        imageGroup.add(imageImg);
        addBorderEvents(imageGroup);
        imageGroup.on('dragstart', function() {
          this.moveToTop();
        });
        layer1.add(imageGroup);
        
        addCloseButton(imageGroup, 0, 0,'topLeft');
        addAnchor(imageGroup, w, 0, 'topRight');
        addAnchor(imageGroup, w, h, 'bottomRight');
        addAnchor(imageGroup, 0, h, 'bottomLeft');

        layer1.draw();

      };
      
      
      var addImageFile = function(evt)
      {
        var tgt = evt.target || window.event.srcElement,
        files = tgt.files;

        // FileReader support
        if (FileReader && files && files.length) {
            var fr = new FileReader();
            fr.readAsDataURL(files[0]);
            fr.onload = function () {
                add_image(fr.result,200,200);
            }
        }
      }

      var toggleVideoState = function(e)
      {
        e.preventDefault();
        var btn = $("#" + e.currentTarget.id).get(0);
        var video = $("#video1").get(0);
        if(video.paused)
        {
          video.play();
          btn.innerHTML = "Pause Video";
        }
        else
        {
          video.pause();
          btn.innerHTML = "Play Video";
        }
      }

      var sendImage = function(e)
      {
          e.preventDefault();
          var groups = layer1.children;
          var user_images = [];
          for(i=1;i<groups.length;i++)
          {
            user_images.push(groups[i]);
          }
          // Child 0 will be image used to play video
          // other children will be groups added by user.
          var form = document.getElementById("data_form");
          for(i=0;i<user_images.length;i++)
          {
            var image=document.createElement("input");
            image.name = "image["+ i +"][file]";
            image.value = user_images[i].children[0].attrs.image.src;
            image.type = "hidden";

            var position_x = document.createElement("input");
            position_x.name = "image["+ i +"][position_x]";
            position_x.value =  user_images[i].attrs.x;
            position_x.type="hidden";

            var position_y = document.createElement("input");
            position_y.name = "image["+ i +"][position_y]";
            position_y.value =  user_images[i].attrs.y;
            position_y.type="hidden";

            var height = document.createElement("input");
            height.name = "image["+ i +"][height]";
            height.value =  user_images[i].children[0].attrs.height;
            height.type="hidden";

            var width = document.createElement("input");
            width.name = "image["+ i +"][width]";
            width.value =  user_images[i].children[0].attrs.width;
            width.type="hidden";

            form.appendChild(image);
            form.appendChild(position_x);
            form.appendChild(position_y);
            form.appendChild(height);
            form.appendChild(width);
          }

          form.submit();
          $.dialog(
          {
            theme: "supervan",
            boxWidth: width,
            useBootstrap: false,
            title: "Submitting !!!",
            content: "Please wait while files are being uploaded. You will be automatically redirected.",
            onOpenBefore: function () {
              $(".jconfirm-closeIcon").hide();
            }
          });
      }


      document.getElementById("addImageFile").addEventListener('change',addImageFile); 
      //document.getElementById("addText").addEventListener('input', addSample);
      $("#data_form").submit(sendImage);
      $("#toggleVideo").click(toggleVideoState);
      
      $(document).ready(function(){
        var showInstructions = function()
        {
          $.alert({
            theme: "supervan",
            boxWidth: width + "px",
            useBootstrap: false,
            title: "Instructions !!!",
            content: "<ul class='collection grey-text text-darken-2 bold'><li class='collection-item'>Wait patiently for images to get uploaded to canvas.</li><li class='collection-item'>To change position of an image , hover the image and then drag it.</li><li class='collection-item'>To resize an image, hover over the image and then use any of white bubbles at the corner of the image.</li><li class='collection-item'>To remove a text or image, hover over the image and then click the top-left red bubble of the image</li></ul>"
          })
        };
        showInstructions();
        $("#showInstructions").on('click',showInstructions);  
      });

    </script>
  
  </section>
</main>